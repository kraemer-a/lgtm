apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    deprecated.daemonset.template.generation: "1"
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"apps/v1","kind":"DaemonSet","metadata":{"annotations":{},"name":"grafana-agent","namespace":"default"},"spec":{"minReadySeconds":10,"selector":{"matchLabels":{"name":"grafana-agent"}},"template":{"metadata":{"annotations":{"config_hash":"5bbd633efad0e82b1ffae5a5f0cc64d0"},"labels":{"name":"grafana-agent"}},"spec":{"containers":[{"args":["-config.file=/etc/agent/agent.yaml","-server.http.address=0.0.0.0:80"],"command":["/bin/agent"],"env":[{"name":"HOSTNAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}}],"image":"grafana/agent:v0.24.0","imagePullPolicy":"IfNotPresent","name":"grafana-agent","ports":[{"containerPort":80,"name":"http-metrics"},{"containerPort":6831,"name":"thrift-compact","protocol":"UDP"},{"containerPort":6832,"name":"thrift-binary","protocol":"UDP"},{"containerPort":14268,"name":"thrift-http"},{"containerPort":14250,"name":"thrift-grpc"}],"securityContext":{"privileged":true,"runAsUser":0},"volumeMounts":[{"mountPath":"/etc/agent","name":"grafana-agent"},{"mountPath":"/var/log","name":"varlog"},{"mountPath":"/var/lib/docker/containers","name":"varlibdockercontainers","readOnly":true}]}],"serviceAccount":"grafana-agent","tolerations":[{"effect":"NoSchedule","operator":"Exists"}],"volumes":[{"configMap":{"name":"grafana-agent"},"name":"grafana-agent"},{"hostPath":{"path":"/var/log"},"name":"varlog"},{"hostPath":{"path":"/var/lib/docker/containers"},"name":"varlibdockercontainers"}]}},"updateStrategy":{"type":"RollingUpdate"}}}
  name: grafana-agent
  namespace: default
spec:
  minReadySeconds: 10
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      name: grafana-agent
  template:
    metadata:
      annotations:
        config_hash: 5bbd633efad0e82b1ffae5a5f0cc64d0
      labels:
        name: grafana-agent
    spec:
      containers:
      - args:
        - -config.file=/etc/agent/agent.yaml
        - -server.http.address=0.0.0.0:80
        command:
        - /bin/agent
        env:
        - name: HOSTNAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        image: grafana/agent:v0.24.0
        imagePullPolicy: IfNotPresent
        name: grafana-agent
        ports:
        - containerPort: 80
          name: http-metrics
          protocol: TCP
        - containerPort: 6831
          name: thrift-compact
          protocol: UDP
        - containerPort: 6832
          name: thrift-binary
          protocol: UDP
        - containerPort: 14268
          name: thrift-http
          protocol: TCP
        - containerPort: 14250
          name: thrift-grpc
          protocol: TCP
        resources: {}
        securityContext:
          privileged: true
          runAsUser: 0
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/agent
          name: grafana-agent
        - mountPath: /var/log
          name: varlog
        - mountPath: /var/lib/docker/containers
          name: varlibdockercontainers
          readOnly: true
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: grafana-agent
      serviceAccountName: grafana-agent
      terminationGracePeriodSeconds: 30
      tolerations:
      - effect: NoSchedule
        operator: Exists
      volumes:
      - configMap:
          defaultMode: 420
          name: grafana-agent
        name: grafana-agent
      - hostPath:
          path: /var/log
          type: ""
        name: varlog
      - hostPath:
          path: /var/lib/docker/containers
          type: ""
        name: varlibdockercontainers
  updateStrategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
    type: RollingUpdate
